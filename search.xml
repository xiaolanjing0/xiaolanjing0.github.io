<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>1.1. Web技术演化</title>
      <link href="/2022/03/04/1-1-web-ji-zhu-yan-hua/"/>
      <url>/2022/03/04/1-1-web-ji-zhu-yan-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="1-1-Web技术演化"><a href="#1-1-Web技术演化" class="headerlink" title="1.1. Web技术演化"></a>1.1. Web技术演化</h1><h2 id="1-1-1-简单网站"><a href="#1-1-1-简单网站" class="headerlink" title="1.1.1. 简单网站"></a>1.1.1. 简单网站</h2><h3 id="1-1-1-1-静态页面"><a href="#1-1-1-1-静态页面" class="headerlink" title="1.1.1.1. 静态页面"></a>1.1.1.1. 静态页面</h3><p>  Web技术在最初阶段，网站的主要内容是静态的，大多站点托管在ISP上，由文字和图片组成，制作和表现形式也是以表格为主。当时的用户行为也非常简单，基本只是浏览网页。  </p><h3 id="1-1-1-2-多媒体阶段"><a href="#1-1-1-2-多媒体阶段" class="headerlink" title="1.1.1.2. 多媒体阶段"></a>1.1.1.2. 多媒体阶段</h3><p> 随着技术的不断发展，音频、视频、Flash等多媒体技术诞生了。多媒体的加入使得网页变得更加生动形象，网页上的交互也给用户带来了更好的体验。   </p><h3 id="1-1-1-3-CGI阶段"><a href="#1-1-1-3-CGI阶段" class="headerlink" title="1.1.1.3. CGI阶段"></a>1.1.1.3. CGI阶段</h3><p>   渐渐的，多媒体已经不能满足人们的请求，于是CGI (Common Gateway Interface) 应运而生。CGI定义了Web服务器与外部应用程序之间的通信接口标准，因此Web服务器可以通过CGI执行外部程序，让外部程序根据Web请求内容生成动态的内容。</p><p>在这个时候，各种编程语言如PHP&#x2F;ASP&#x2F;JSP也逐渐加入市场，基于这些语言可以实现更加模块化的、功能更强大的应用程序  </p><h3 id="1-1-1-4-MVC"><a href="#1-1-1-4-MVC" class="headerlink" title="1.1.1.4. MVC"></a>1.1.1.4. MVC</h3><p>随着Web应用开发越来越标准化，出现了MVC等思想。MVC是Model&#x2F;View&#x2F;Control的缩写，Model用于封装数据和数据处理方法，视图View是数据的HTML展现，控制器Controller负责响应请求，协调Model和View。</p><p>Model，View和Controller的分开，是一种典型的关注点分离的思想，使得代码复用性和组织性更好，Web应用的配置性和灵活性也越来越好。而数据访问也逐渐通过面向对象的方式来替代直接的SQL访问，出现了ORM (Object Relation Mapping) 的概念。</p><p>除了MVC，类似的设计思想还有MVP、MVVM等。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络安全（渗透）学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重磅爆料 ! Windows 12 已经在路上 (文末送书)</title>
      <link href="/2022/02/22/chong-bang-bao-liao-windows-12-yi-jing-zai-lu-shang-wen-mo-song-shu/"/>
      <url>/2022/02/22/chong-bang-bao-liao-windows-12-yi-jing-zai-lu-shang-wen-mo-song-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="重磅爆料-Windows-12-已经在路上-文末送书"><a href="#重磅爆料-Windows-12-已经在路上-文末送书" class="headerlink" title="重磅爆料 ! Windows 12 已经在路上 (文末送书)"></a>重磅爆料 ! Windows 12 已经在路上 (文末送书)</h2><p>据 MSPoweruser 报道，Windows 11 虽然刚刚开始步入正轨，但最新爆料称微软已经在开启下一个计划，Windows 12 的开发将在 3 月份开始。<br>![](<a href="https://view.moezx.cc/image/fChOV"><img src="https://view.moezx.cc/images/2022/02/22/6dc31d7aca34004bedc823c4b9c9912e.png" alt="6dc31d7aca34004bedc823c4b9c9912e.png" border="0" /></a>)<br>德国科技网站 Deskmodder.de 称，根据内部消息，微软将在 3 月开始开发 Windows 12 系统，尽管 Windows 11 正式版才在去年 10 月份发布。</p><p>正如 Tom’s Hardware 所指出的，这一报告似乎得到了 Swift On Security 的证实，他们在推特上声称，“根据微软的消息来源，Windows 12 已经在开发中了，它将需要两个 TPM。”虽然这很快激起了人们的猜测，但 Swift On Security 不久后透露，该推文“只是开了个玩笑”，但 Deskmodder.de 仍然坚称 Windows 12 即将开发。<br>![](<a href="https://view.moezx.cc/image/fC5Kx"><img src="https://view.moezx.cc/images/2022/02/22/99049387a6a931b6e46d9d1aef35bd07.png" alt="99049387a6a931b6e46d9d1aef35bd07.png" border="0" /></a>)<br>德国网站 WindowsUnited 表示，微软几乎要从头开始构建 Windows 12，没有过多借鉴 Windows 10。其想法是建立一个现代的、轻量级的、高效的操作系统，就像当初的 Windows 10X 那样。这可能意味着商店应用程序将被优先考虑，而经典的桌面应用程序将被虚拟化运行，就像 Windows 10X 计划的那样。</p><p>即使 Windows 12 很快进入开发阶段，我们也可能要等待相当长的一段时间，才会迎来微软的官方宣布，毕竟一款系统的开发需要多年的时间。</p><p>Windows 10 在 2015 年发布时被称作是 Windows 操作系统的最后一个版本。大家以为会进入较长的稳定期，每两年交替进行一次大更新。然而，Windows 11 的宣布和推出再次唤醒了 Windows 系统的“咆哮”发展。</p><p>Windows 11 在某种程度上是十分必要的，因为一切需要根据时代来适应。一些最重要的预示性变化包括改进的任务调度器，随着英特尔混合架构 Alder Lake 处理器成为主流，这将使 PC 更加高效。此外，系统的安全性也得到重大强调。微软觉得有足够的信心牺牲许多可使用的老一代 CPU（英特尔 Kaby Lake 或更早，AMD Ryzen 1000 或更早）。</p><p>到目前为止，Windows 11 似乎还没有明显获取 PC 用户的芳心。然而，Windows 还有传说中的好版本 &#x2F; 坏版本周期。基于此，以及也许来自系统和组件制造商促进硬件升级的压力，微软可能会重新回到常规的主要 Windows 版本更新轨道上。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 电脑研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础入门-操作系统&amp;名词&amp;文件下载&amp;反弹SHELL&amp;防火墙绕过</title>
      <link href="/2022/02/15/ji-chu-ru-men-cao-zuo-xi-tong-ming-ci-wen-jian-xia-zai-fan-dan-shell-fang-huo-qiang-rao-guo/"/>
      <url>/2022/02/15/ji-chu-ru-men-cao-zuo-xi-tong-ming-ci-wen-jian-xia-zai-fan-dan-shell-fang-huo-qiang-rao-guo/</url>
      
        <content type="html"><![CDATA[<h1 id="基础入门-操作系统-amp-名词-amp-文件下载-amp-反弹SHELL-amp-防火墙绕过"><a href="#基础入门-操作系统-amp-名词-amp-文件下载-amp-反弹SHELL-amp-防火墙绕过" class="headerlink" title="基础入门-操作系统&amp;名词&amp;文件下载&amp;反弹SHELL&amp;防火墙绕过"></a>基础入门-操作系统&amp;名词&amp;文件下载&amp;反弹SHELL&amp;防火墙绕过</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>1、名词解释-渗透测试-漏洞&amp;攻击&amp;后门&amp;代码&amp;专业词<br>2、必备技能-操作系统-用途&amp;命令&amp;权限&amp;用户&amp;防火墙<br>3、必备技能-文件下载-缘由&amp;场景&amp;使用-提权&amp;后渗透<br>4、必备技能-反弹命令-缘由&amp;场景&amp;使用-提权&amp;后渗透  </p><p>前后端，POC&#x2F;EXP，Payload&#x2F;Shellcode，后门&#x2F;Webshell，木马&#x2F;病毒，<br>反弹，回显，跳板，黑白盒测试，暴力破解，社会工程学，撞库，ATT&amp;CK等  </p><ul><li>参考<br><a href="https://www.cnblogs.com/sunny11/p/13583083.html">https://www.cnblogs.com/sunny11/p/13583083.html</a><br><a href="https://forum.ywhack.com/bountytips.php?download">https://forum.ywhack.com/bountytips.php?download</a><br><a href="https://forum.ywhack.com/reverse-shell/">https://forum.ywhack.com/reverse-shell/</a><br><a href="https://blog.csdn.net/weixin_43303273/article/details/83029138">https://blog.csdn.net/weixin_43303273/article/details/83029138</a> <h2 id="渗透测试常用专业用语"><a href="#渗透测试常用专业用语" class="headerlink" title="渗透测试常用专业用语"></a>渗透测试常用专业用语</h2></li><li><ol><li>POC ,  EXP  ,  Payload  ，shellcode</li></ol></li></ul><p>POC：全称为‘proof of concept’，中文：‘概念验证’，常指一段漏洞证明的代码。<br>EXP：全称‘Exploit’，中文‘利用’，指利用系统漏洞进行攻击的动作。<br>Payload：中文‘有效载荷’，指成功的exploit之后，真正在目标系统执行代码或者指令。<br>Shellcode：简单翻译‘shell代码’，payload的一种，由于其建立正向、反向shell而得名。  </p><ul><li><ol start="2"><li>几点注意<br>POC是用来证明漏洞存在的，EXP是用来利用漏洞的，两者通常不是一类，或者说，PoC通常是无害的，Exp通常是有害的，有了POC，才有EXP。<br>Payload有很多种，它可以是Shellcode，也可以直接是一段系统命令。同一个Payload可以用于多个漏洞，但每个漏洞都有其自己的EXP，也就是说不存在通用的EXP。<br>Shellcode也有很多种，包括正向的，反向的，甚至meterpreter。<br>Shellcode与Shellshcok不是一个，Shellshock特指14年发现的Shellshock漏洞。</li></ol></li></ul><h2 id="一、攻击篇"><a href="#一、攻击篇" class="headerlink" title="一、攻击篇"></a>一、攻击篇</h2><h2 id="1-攻击工具"><a href="#1-攻击工具" class="headerlink" title="1.攻击工具"></a>1.攻击工具</h2><ul><li>肉鸡<br>所谓“肉鸡”是一种很形象的比喻，比喻那些可以被攻击者控制的电脑、手机、服务器或者其他摄像头、路由器等智能设备，用于发动网络攻击。<br>  例如在2016年美国东海岸断网事件中，黑客组织控制了大量的联网摄像头用于发动网络攻击，这些摄像头则可被称为“肉鸡”。</li><li>僵尸网络<br>  僵尸网络 Botnet 是指采用一种或多种传播手段，将大量主机感染病毒，从而在控制者和被感染主机之间所形成的一个可一对多控制的网络。<br>  僵尸网络是一个非常形象的比喻，众多的计算机在不知不觉中如同中国古老传说中的僵尸群一样被人驱赶和指挥着，成为被攻击者执行各类恶意活动（DDOS、垃圾邮件等）利用的一种基础设施。  </li><li>木马<br>  就是那些表面上伪装成了正常的程序，但是当这些程序运行时，就会获取系统的整个控制权限。<br>  有很多黑客就是热衷使用木马程序来控制别人的电脑，比如灰鸽子、Gh0st、PcShare等等。    </li><li>网页木马<br>  表面上伪装成普通的网页或是将恶意代码直接插入到正常的网页文件中，当有人访问时，网页木马就会利用对方系统或者浏览器的漏洞自动将配置好的木马服务端植入到访问者的电脑上来自动执行将受影响的客户电脑变成肉鸡或纳入僵尸网络。  </li><li>Rootkit<br>  Rootkit是攻击者用来隐藏自己的行踪和保留root（根权限，可以理解成WINDOWS下的system或者管理员权限）访问权限的工具。<br>  通常，攻击者通过远程攻击的方式获得root访问权限，或者是先使用密码猜解（破解）的方式获得对系统的普通访问权限，进入系统后，再通过对方系统存在的安全漏洞获得系统的root或system权限。<br>  然后，攻击者就会在对方的系统中安装Rootkit，以达到自己长久控制对方的目的，Rootkit功能上与木马和后门很类似，但远比它们要隐蔽。  </li><li>蠕虫病毒<br>  它是一类相对独立的恶意代码，利用了联网系统的开放性特点，通过可远程利用的漏洞自主地进行传播，受到控制终端会变成攻击的发起方，尝试感染更多的系统。<br>  蠕虫病毒的主要特性有：自我复制能力、很强的传播性、潜伏性、特定的触发性、很大的破坏性。  </li><li>震网病毒<br>  又名Stuxnet病毒，是第一个专门定向攻击真实世界中基础（能源）设施的“蠕虫”病毒，比如核电站，水坝，国家电网。<br>  作为世界上首个网络“超级破坏性武器”，Stuxnet的计算机病毒已经感染了全球超过 45000个网络，其目标伊朗的铀浓缩设备遭到的攻击最为严重。  </li><li>勒索病毒<br>  主要以邮件、程序木马、网页挂马的形式进行传播。该病毒性质恶劣、危害极大，一旦感染将给用户带来无法估量的损失。这种病毒利用各种加密算法对文件进行加密，被感染者一般无法解密，必须拿到解密的私钥才有可能破解。  </li><li>挖矿木马<br>  一种将PC、移动设备甚至服务器变为矿机的木马，通常由挖矿团伙植入，用于挖掘比特币从而赚取利益。  </li><li>攻击载荷<br>  攻击载荷（Payload）是系统被攻陷后执行的多阶段恶意代码。<br>  通常攻击载荷附加于漏洞攻击模块之上，随漏洞攻击一起分发，并可能通过网络获取更多的组件。  </li><li>嗅探器（Sniffer）<br>  就是能够捕获网络报文的设备或程序。嗅探器的正当用处在于分析网络的流量，以便找出所关心的网络中潜在的问题。  </li><li>恶意软件<br>  被设计来达到非授权控制计算机或窃取计算机数据等多种恶意行为的程序。  </li><li>间谍软件<br>  一种能够在用户不知情的情况下，在其电脑、手机上安装后门，具备收集用户信息、监听、偷拍等功能的软件。  </li><li>后门<br>  这是一种形象的比喻，入侵者在利用某些方法成功的控制了目标主机后，可以在对方的系统中植入特定的程序，或者是修改某些设置，用于访问、查看或者控制这台主机。<br>  这些改动表面上是很难被察觉的，就好象是入侵者偷偷的配了一把主人房间的钥匙，或者在不起眼处修了一条按到，可以方便自身随意进出。<br>  通常大多数木马程序都可以被入侵者用于创建后门（BackDoor）。  </li><li>弱口令<br>  指那些强度不够，容易被猜解的，类似123，abc这样的口令（密码）。  </li><li>漏洞<br>  漏洞是在硬件、软件、协议的具体实现或系统安全策略上存在的缺陷，从而可以使攻击者能够在未授权的情况下访问或破坏系统。<br>  奇安信集团董事长齐向东在《漏洞》一书中指出，软件的缺陷是漏洞的一个主要来源，缺陷是天生的，漏洞是不可避免的。  </li><li>远程命令执行漏洞<br>  由于系统设计实现上存在的漏洞，攻击者可能通过发送特定的请求或数据导致在受影响的系统上执行攻击者指定的任意命令。  </li><li>0day漏洞<br>  0day漏洞最早的破解是专门针对软件的，叫做WAREZ，后来才发展到游戏，音乐，影视等其他内容的。<br>  0day中的0表示Zero，早期的0day表示在软件发行后的24小时内就出现破解版本。<br>  在网络攻防的语境下，0day漏洞指那些已经被攻击者发现掌握并开始利用，但还没有被包括受影响软件厂商在内的公众所知的漏洞，这类漏洞对攻击者来说有完全的信息优势，由于没有漏洞的对应的补丁或临时解决方案，防守方不知道如何防御，攻击者可以达成最大可能的威胁。  </li><li>1day漏洞<br>  指漏洞信息已公开但仍未发布补丁的漏洞。此类漏洞的危害仍然较高，但往往官方会公布部分缓解措施，如关闭部分端口或者服务等。  </li><li>Nday漏洞<br>  指已经发布官方补丁的漏洞。通常情况下，此类漏洞的防护只需更新补丁即可，但由于多种原因，导致往往存在大量设备漏洞补丁更新不及时，且漏洞利用方式已经在互联网公开，往往此类漏洞是黑客最常使用的漏洞。<br>  例如在永恒之蓝事件中，微软事先已经发布补丁，但仍有大量用户中招。  <h2 id="2-攻击方法"><a href="#2-攻击方法" class="headerlink" title="2.攻击方法"></a>2.攻击方法</h2></li><li>挂马<br>  就是在别人的网站文件里面放入网页木马或者是将代码潜入到对方正常的网页文件里，以使浏览者中马。  </li><li>挖洞<br>  指漏洞挖掘。  </li><li>加壳<br>  就是利用特殊的算法，将EXE可执行程序或者DLL动态连接库文件的编码进行改变（比如实现压缩、加密），以达到缩小文件体积或者加密程序编码，甚至是躲过杀毒软件查杀的目的。<br>目前较常用的壳有UPX，ASPack、PePack、PECompact、UPack、免疫007、木马彩衣等等。</li><li>溢出<br>  简单的解释就是程序对输入数据没有执行有效的边界检测而导致错误，后果可能是造成程序崩溃或者是执行攻击者的命令。    </li><li>缓冲区溢出<br>  攻击者向一个地址区输入这个区间存储不下的大量字符。在某些情况下，这些多余的字符可以作为“执行代码”来运行，因此足以使攻击者不受安全措施限制而获得计算机的控制权。    </li><li>注入<br>  Web安全头号大敌。攻击者把一些包含攻击代码当做命令或者查询语句发送给解释器，这些恶意数据可以欺骗解释器，从而执行计划外的命令或者未授权访问数据。<br>  注入攻击漏洞往往是应用程序缺少对输入进行安全性检查所引起的。注入漏洞通常能在SQL查询、LDAP查询、OS命令、程序参数等中出现。  </li><li>SQL注入<br> 注入攻击最常见的形式，主要是指Web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在Web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询或其他操作，导致数据库信息泄露或非授权操作数据表。  </li><li>注入点<br>  即可以实行注入的地方，通常是一个涉及访问数据库的应用链接。根据注入点数据库的运行帐号的权限的不同，你所得到的权限也不同。  </li><li>软件脱壳<br>  顾名思义，就是利用相应的工具，把在软件“外面”起保护作用的“壳”程序去除，还文件本来面目，这样再修改文件内容或进行分析检测就容易多了。  </li><li>免杀<br>  就是通过加壳、加密、修改特征码、加花指令等等技术来修改程序，使其逃过杀毒软件的查杀。  </li><li>暴力破解<br>  简称“爆破”。黑客对系统中账号的每一个可能的密码进行高度密集的自动搜索，从而破坏安全并获得对计算机的访问权限。  </li><li>洪水攻击<br>  是黑客比较常用的一种攻击技术，特点是实施简单，威力巨大，大多是无视防御的。<br>  从定义上说，攻击者对网络资源发送过量数据时就发生了洪水攻击，这个网络资源可以是router，switch，host，application等。<br>  洪水攻击将攻击流量比作成洪水，只要攻击流量足够大，就可以将防御手段打穿。<br>  DDoS攻击便是洪水攻击的一种。  </li><li>SYN攻击<br>  利用操作系统TCP协调设计上的问题执行的拒绝服务攻击，涉及TCP建立连接时三次握手的设计。</li></ul><p>-DoS攻击<br>        拒绝服务攻击。攻击者通过利用漏洞或发送大量的请求导致攻击对象无法访问网络或者网站无法被访问。  </p><ul><li>DDoS<br>  分布式DOS攻击，常见的UDP、SYN、反射放大攻击等等，就是通过许多台肉鸡一起向你发送一些网络请求信息，导致你的网络堵塞而不能正常上网。  </li><li>抓鸡<br>  即设法控制电脑，将其沦为肉鸡。  </li><li>端口扫描<br>  端口扫描是指发送一组端口扫描消息，通过它了解到从哪里可探寻到攻击弱点，并了解其提供的计算机网络服务类型，试图以此侵入某台计算机。  </li><li>花指令<br>  通过加入不影响程序功能的多余汇编指令，使得杀毒软件不能正常的判断病毒文件的构造。说通俗点就是“杀毒软件是从头到脚按顺序来识别病毒。如果我们把病毒的头和脚颠倒位置，杀毒软件就找不到病毒了”。  </li><li>反弹端口<br>  有人发现，防火墙对于连入的连接往往会进行非常严格的过滤，但是对于连出的连接却疏于防范。<br>  于是，利用这一特性，反弹端口型软件的服务端(被控制端)会主动连接客户端(控制端)，就给人“被控制端主动连接控制端的假象，让人麻痹大意。  </li><li>网络钓鱼<br>  攻击者利用欺骗性的电子邮件或伪造的Web 站点等来进行网络诈骗活动。<br>  诈骗者通常会将自己伪装成网络银行、在线零售商和信用卡公司等可信的品牌，骗取用户的私人信息或邮件账号口令。<br>  受骗者往往会泄露自己的邮箱、私人资料，如信用卡号、银行卡账户、身份证号等内容。  </li><li>鱼叉攻击<br>  鱼叉攻击是将用鱼叉捕鱼形象的引入到了网络攻击中，主要是指可以使欺骗性电子邮件看起来更加可信的网络钓鱼攻击，具有更高的成功可能性。<br>  不同于撒网式的网络钓鱼，鱼叉攻击往往更加具备针对性，攻击者往往“见鱼而使叉”。<br>  为了实现这一目标，攻击者将尝试在目标上收集尽可能多的信息。通常，组织内的特定个人存在某些安全漏洞。</li></ul><p>-钓鲸攻击<br>        捕鲸是另一种进化形式的鱼叉式网络钓鱼。它指的是针对高级管理人员和组织内其他高级人员的网络钓鱼攻击。<br>        通过使电子邮件内容具有个性化并专门针对相关目标进行定制的攻击。  </p><ul><li>水坑攻击<br>  顾名思义，是在受害者必经之路设置了一个“水坑(陷阱)”。<br>  最常见的做法是，黑客分析攻击目标的上网活动规律，寻找攻击目标经常访问的网站的弱点，先将此网站“攻破”并植入攻击代码，一旦攻击目标访问该网站就会“中招”。  </li><li>嗅探<br>  嗅探指的是对局域网中的数据包进行截取及分析，从中获取有效信息。  </li><li>APT攻击<br>  Advanced Persistent Threat，即高级可持续威胁攻击，指某组织在网络上对特定对象展开的持续有效的攻击活动。<br>  这种攻击活动具有极强的隐蔽性和针对性，通常会运用受感染的各种介质、供应链和社会工程学等多种手段实施先进的、持久的且有效的威胁和攻击。  </li><li>C2<br>  C2 全称为Command and Control，命令与控制，常见于APT攻击场景中。作动词解释时理解为恶意软件与攻击者进行交互，作名词解释时理解为攻击者的“基础设施”。  </li><li>供应链攻击<br>  是黑客攻击目标机构的合作伙伴，并以该合作伙为跳板，达到渗透目标用户的目的。<br>  一种常见的表现形式为，用户对厂商产品的信任，在厂商产品下载安装或者更新时进行恶意软件植入进行攻击。<br>  所以，在某些软件下载平台下载的时候，若遭遇捆绑软件，就得小心了！  </li><li>社会工程学<br>  一种无需依托任何黑客软件，更注重研究人性弱点的黑客手法正在兴起，这就是社会工程学黑客技术。<br>  通俗而言是指利用人的社会学弱点实施网络攻击的一整套方法论，其攻击手法往往出乎人意料。<br>  世界第一黑客凯文·米特尼克在《反欺骗的艺术》中曾提到，人为因素才是安全的软肋。很多企业、公司在信息安全上投入大量的资金，最终导致数据泄露的原因，往往却是发生在人本身。  </li><li>拿站<br>  指得到一个网站的最高权限，即得到后台和管理员名字和密码。  </li><li>提权<br>  指得到你本没得到的权限，比如说电脑中非系统管理员就无法访问一些C盘的东西，而系统管理员就可以，通过一定的手段让普通用户提升成为管理员，让其拥有管理员的权限，这就叫提权。  </li><li>渗透<br>  就是通过扫描检测你的网络设备及系统有没有安全漏洞，有的话就可能被入侵，就像一滴水透过一块有漏洞的木板，渗透成功就是系统被入侵。  </li><li>横移<br>  指攻击者入侵后，从立足点在内部网络进行拓展，搜寻控制更多的系统。  </li><li>跳板<br>  一个具有辅助作用的机器，利用这个主机作为一个间接工具，来入侵其他主机，一般和肉鸡连用。  </li><li>网马<br>  就是在网页中植入木马，当打开网页的时候就运行了木马程序。  </li><li>黑页<br>  黑客攻击成功后，在网站上留下的黑客入侵成功的页面，用于炫耀攻击成果。  </li><li>暗链<br>  看不见的网站链接，“暗链”在网站中的链接做得非常隐蔽，短时间内不易被搜索引擎察觉。<br>  它和友情链接有相似之处，可以有效地提高网站权重。</li></ul><p>-拖库<br>        拖库本来是数据库领域的术语，指从数据库中导出数据。<br>        在网络攻击领域，它被用来指网站遭到入侵后，黑客窃取其数据库文件。  </p><ul><li>撞库<br>  撞库是黑客通过收集互联网已泄露的用户和密码信息，生成对应的字典表，尝试批量登陆其他网站后，得到一系列可以登录的用户。<br>  很多用户在不同网站使用的是相同的帐号密码，因此黑客可以通过获取用户在A网站的账户从而尝试登录B网址，这就可以理解为撞库攻击。  </li><li>暴库<br>  入侵网站的一种手法，通过恶意代码让网站爆出其一些敏感数据来。    </li><li>CC攻击<br>  即Challenge Collapsar，名字来源于对抗国内安全厂商绿盟科技早期的抗拒绝服务产品黑洞，攻击者借助代理服务器生成指向受害主机的涉及大量占用系统资源的合法请求，耗尽目标的处理资源，达到拒绝服务的目的。  </li><li>Webshell<br>  Webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做是一种网页后门，可以上传下载文件，查看数据库，执行任意程序命令等。  </li><li>跨站攻击<br>  通常简称为XSS，是指攻击者利用网站程序对用户输入过滤不足，输入可以显示在页面上对其他用户造成影响的HTML代码，从而盗取用户资料、利用用户身份进行某种动作或者对访问者进行病毒侵害的一种攻击方式。  </li><li>中间人攻击<br>  中间人攻击是一种“间接”的入侵攻击，这种攻击模式是通过各种技术手段将受入侵者控制的一台计算机虚拟放置在网络连接中的两台通信计算机之间，通过拦截正常的网络通信数据，并进行数据篡改和嗅探，而这台计算机就称为“中间人”。  </li><li>薅羊毛<br>  指网赚一族利用各种网络金融产品或红包活动推广下线抽成赚钱，又泛指搜集各个银行等金融机构及各类商家的优惠信息，以此实现盈利的目的。这类行为就被称之为薅羊毛。  </li><li>商业电子邮件攻击（BEC）<br>  也被称为“变脸诈骗”攻击，这是针对高层管理人员的攻击，攻击者通常冒充（盗用）决策者的邮件，来下达与资金、利益相关的指令；或者攻击者依赖社会工程学制作电子邮件，说服&#x2F;诱导高管短时间进行经济交易。  </li><li>电信诈骗<br>  是指通过电话、网络和短信方式，编造虚假信息，设置骗局，对受害人实施远程、非接触式诈骗，诱使受害人打款或转账的犯罪行为，通常以冒充他人及仿冒、伪造各种合法外衣和形式的方式达到欺骗的目的。  </li><li>杀猪盘<br>  网络流行词，电信诈骗的一种，是一种网络交友诱导股票投资、赌博等类型的诈骗方式，“杀猪盘”则是“从业者们”自己起的名字，是指放长线“养猪”诈骗，养得越久，诈骗得越狠。  </li><li>ARP攻击<br>  ARP协议的基本功能就是通过目标设备的IP地址，查询目标设备的MAC地址，以保证通信的进行。<br>  基于ARP协议的这一工作特性，黑客向对方计算机不断发送有欺诈性质的ARP数据包，数据包内包含有与当前设备重复的Mac地址，使对方在回应报文时，由于简单的地址重复错误而导致不能进行正常的网络通信。  </li><li>欺骗攻击<br> 网络欺骗的技术主要有：HONEYPOT和分布式HONEYPOT、欺骗空间技术等。<br> 主要方式有：IP欺骗、ARP欺骗、 DNS欺骗、Web欺骗、电子邮件欺骗、源路由欺骗（通过指定路由，以假冒身份与其他主机进行合法通信或发送假报文，使受攻击主机出现错误动作）、地址欺骗（包括伪造源地址和伪造中间站点）等。</li><li>Shellcode<br>  一段可被操作系统无需特别定位处理的指令，通常在利用软件漏洞后执行的恶意代码，shellcode为二进制的机器码，因为经常让攻击者获得shell而得名。  </li><li>物理攻击<br>  通俗理解，即采用物理接触而非技术手段达到网络入侵的目的，最常见的表现形式为插U盘。<br>  著名的震网病毒事件即通过插U盘的形式，感染了伊朗核设施。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 网络安全(渗透) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何清理藏在你硬盘里的宝物</title>
      <link href="/2022/02/14/ru-he-qing-li-cang-zai-ni-ying-pan-li-de-bao-wu/"/>
      <url>/2022/02/14/ru-he-qing-li-cang-zai-ni-ying-pan-li-de-bao-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="如何清理藏在你硬盘里的宝物"><a href="#如何清理藏在你硬盘里的宝物" class="headerlink" title="如何清理藏在你硬盘里的宝物"></a>如何清理藏在你硬盘里的宝物</h1><p>事情是这样的 @(泪)，前几天，为了给我的 256G 的 手机做个备份，好降级 MIUI12，发现我 256G 的破 SSD 居然只剩下 10G 了，不知原因如何，于是在网上找了点分析硬盘空间的小工具。  </p><ul><li>工具</li></ul><p>工欲善其事必先利其器，没有工具的话咱这波估计只能手翻（狗头）<br><a href="https://cdn.hyh.ink/cdn/treesizepropjb.7z">下载Link</a><br>TreeSize Pro 可以快速的扫描文件然后直观地告诉你磁盘中文件的分布情况，就像这样<br><img src="https://cdn.hyh.ink/pics/2020/08/21/imagec9a862ce9c3b5ff0.png#vwid=945&vhei=532">  </p><h2 id="开始整活"><a href="#开始整活" class="headerlink" title="开始整活"></a>开始整活</h2><p>点击 install TreeSize.bat 开始安装<br>安装后打开桌面上的 Treesize Pro，双击底部列表中你要扫描的硬盘，就会开始扫描了，扫描结束后可以在右侧看到分析<br><img src="https://cdn.hyh.ink/pics/2020/08/21/image04441a2e57a6d4f2.png#vwid=940&vhei=544"><br>整理之后的结果，搞的时候忘记截图了，还有个 50G 的 OneDrive #(喜极而泣)<br>在饼状图里可以看见我的 SbeamLibrary 很大，可以进入 details 里查看详细信息，翻了几层目录之后发现 CSGO 有足足 24.5G（明明卸载了还占用这么大），查找一番后发现 maps 文件夹很大，有足足 18.9G!<br><img src="https://cdn.hyh.ink/pics/2020/08/21/image507855440545aa5a.png#vwid=461&vhei=341"><br>然后去 OneDrive 里面把没必要的同步关了<br>整活完成，电脑多出 90G 盘，爽歪歪!  </p>]]></content>
      
      
      
        <tags>
            
            <tag> 电脑研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10 系统多了 3D 对象文件夹怎么办</title>
      <link href="/2022/02/12/win10-xi-tong-duo-liao-3d-dui-xiang-wen-jian-jia-zen-me-ban/"/>
      <url>/2022/02/12/win10-xi-tong-duo-liao-3d-dui-xiang-wen-jian-jia-zen-me-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="Win10系统多了3D对象文件夹怎么办？"><a href="#Win10系统多了3D对象文件夹怎么办？" class="headerlink" title="Win10系统多了3D对象文件夹怎么办？"></a>Win10系统多了3D对象文件夹怎么办？</h1><ul><li>Win10去掉3D对象文件夹：</li></ul><p>1、按下WIN+R，然后输入regedit 回车；</p><p>2、然后找到：</p><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\</p><p>3、找到3D对象文件夹对应的{0DB7E03F-FC29-4DC6-9020-FF41B59E513A} 项，删除</p><p>4、然后我们再打开</p><p>HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace</p><p>5、继续删除{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}</p><p>6、退出注册表，刷新一下，就会发现3D对象文件夹不见了。  </p><p>好了win10系统去掉3D对象文件夹的方法就为大家介绍到这里啦，希望本教程对大家能有所帮助。</p><p><img src="https://img1.baidu.com/it/u=3077624935,2762228087&fm=26&fmt=auto"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 电脑研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/11/hello-world/"/>
      <url>/2022/02/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
